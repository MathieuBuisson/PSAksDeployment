name: "0.1$(Rev:.r)"
pool:
  vmImage: 'vs2017-win2016'

steps:
- powershell: |
    Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
    Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted
    Install-Module -Name 'Pester' -Scope CurrentUser -Force -SkipPublisherCheck
    Install-Module -Name 'Az.Profile' -Scope CurrentUser -Force
    Install-Module -Name 'Az.Resources' -Scope CurrentUser -Force
    Install-Module -Name 'Az.Aks' -Scope CurrentUser -Force
  displayName: Install Build Dependencies
  name: installDependencies
  workingDirectory: $(build.sourcesDirectory)
  failOnStderr: true

- powershell: |
    $UnitTestParams = @{
      Script       = './Tests/Unit'
      Strict       = $True
      OutputFile   = '$(Common.TestResultsDirectory)/UnitTestResults.xml'
    }
    Invoke-Pester @UnitTestParams
  displayName: Run Unit Tests
  name: unitTests
  workingDirectory: $(build.sourcesDirectory)
  failOnStderr: true

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testRunner: NUnit
    testResultsFiles: '*TestResults.xml'
    searchFolder: '$(Common.TestResultsDirectory)'
    mergeTestResults: true
    testRunTitle: 'CI Tests'
